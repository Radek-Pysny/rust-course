var searchIndex = JSON.parse('{\
"client":{"doc":"","t":"NENFFLLALLLLLLFFFLLLENNNNNENNNLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["ErrorOutput","OutputType","StandardOutput","_login","_save_file","borrow","borrow_mut","commands","deref","deref_mut","drop","from","init","into","run_interactive","save_file","save_image","try_from","try_into","type_id","Command","Empty","File","File","Image","Image","MessageType","Quit","Text","Text","borrow","borrow","borrow_mut","borrow_mut","check_image","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","extract","fmt","from","from","from_str","header","init","init","into","into","to_string","try_from","try_from","try_into","try_into","type_id","type_id","content","content","path","path","text"],"q":[[0,"client"],[20,"client::commands"],[62,"client::commands::Command"],[67,"tokio::net::tcp::stream"],[68,"alloc::string"],[69,"eyre"],[70,"std::path"],[71,"alloc::vec"],[72,"core::result"],[73,"core::any"],[74,"core::option"],[75,"core::fmt"],[76,"core::fmt"],[77,"core::fmt"],[78,"core::marker"]],"d":["","","","<code>login</code> take care of client authentication right after …","<code>_save_file</code> is just a helper function that saved what is …","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","<code>run_interactive</code> is an entry point for interactive mode of …","<code>save_file</code> save general file into <code>files/</code> subdirectory.","<code>save_image</code> save image as .png file under <code>images/</code> …","","","","<code>Command</code> represent all the available commands over known by …","","","","","","","","","","","","","","<code>check_image</code> implement transparent conversion of any …","","","","","","","","","","","<code>extract</code> is used for extraction of data of command into …","<code>fmt</code> enable conversion from <code>Comment</code> to <code>&amp;str</code> via <code>to_string</code> …","Returns the argument unchanged.","Returns the argument unchanged.","<code>from_str</code> implement conversion from <code>&amp;str</code> to <code>Command</code> that …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[22,0,22,0,0,22,22,0,22,22,22,22,22,22,0,0,0,22,22,22,0,14,12,14,12,14,0,14,12,14,12,14,12,14,0,12,14,12,14,12,14,12,14,12,14,14,14,12,14,14,14,12,14,12,14,14,12,14,12,14,12,14,23,24,23,24,25],"f":[0,0,0,[[1,2,2],[[4,[3]]]],[[5,[7,[6]]],[[4,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[9,-1,[]],[9,-1,[]],[9,8],[-1,-1,[]],[[],9],[-1,-2,[],[]],[[2,2,2],[[4,[8]]]],[[3,[7,[6]]],[[4,[8]]]],[[[7,[6]]],[[4,[8]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[6]]],[[10,[8,3]]]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,-1,[]],[9,8],[9,8],[[12,12],13],[[14,14],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[14,[[8,[12,[15,[3]],[15,[[7,[6]]]]]]]],[[14,16],17],[-1,-1,[]],[-1,-1,[]],[2,[[10,[14]]]],[[-1,-2],[[18,[-2,-3]]],[],[19,20,21],[]],[[],9],[[],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,0,0,0,0],"c":[],"p":[[3,"TcpStream",67],[15,"str"],[3,"String",68],[6,"Result",69],[3,"Path",70],[15,"u8"],[3,"Vec",71],[15,"tuple"],[15,"usize"],[4,"Result",72],[3,"TypeId",73],[4,"MessageType",20],[15,"bool"],[4,"Command",20],[4,"Option",74],[3,"Formatter",75],[6,"Result",75],[3,"IndentedSection",76],[8,"Display",75],[8,"Send",77],[8,"Sync",77],[4,"OutputType",0],[13,"File",62],[13,"Image",62],[13,"Text",62]]},\
"server":{"doc":"","t":"NGNNGNNNNENMMLLFALLLLLLLFMMFLFLLLLMMFF","n":["ClientConnectionError","ClientMap","ClientPeerAddressError","ClientStreamConfigError","Clients","DBError","ForwardMessageError","IOError","PortBindError","ServerError","SharedMutexPoisonedError","alloc","base","borrow","borrow_mut","chat","db_queries","fmt","fmt","from","from","header","in_current_span","into","listen_and_accept","phantom","ptr","send_to_everyone_else","source","start_server","to_string","try_from","try_into","type_id","address","detail","insert_chat_message","insert_login"],"q":[[0,"server"],[34,"server::ServerError"],[36,"server::db_queries"],[38,"core::net::socket_addr"],[39,"tokio::net::tcp::stream"],[40,"alloc::string"],[41,"std::collections::hash::map"],[42,"tokio::sync::mutex"],[43,"alloc::sync"],[44,"core::sync::atomic"],[45,"sqlx_sqlite"],[46,"core::result"],[47,"core::fmt"],[48,"core::fmt"],[49,"color_eyre::section"],[50,"core::fmt"],[51,"core::marker"],[52,"core::error"],[53,"core::option"],[54,"core::any"]],"d":["","","","","","","","","","","","","","","","<code>chat</code> implement main processing loop.","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","<code>listen_and_accept</code> take care of connection of new client …","","","<code>send_to_everyone_else</code> process sending of message to every …","","<code>start_server</code> is entrypoint of server. It starts main …","","","","","","","<code>insert_chat_message</code> insert a single complete row into the …","<code>insert_login</code> inserts a single complete row into the …"],"i":[10,0,10,10,0,10,10,10,10,0,10,24,25,10,10,0,0,10,10,10,10,10,10,10,0,24,24,0,10,0,10,10,10,10,26,26,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[[6,[[5,[1,[4,[2,3]]]]]]]],[7,[8]],9],[[11,[4,10]]]],0,[[10,12],13],[[10,12],13],[14,10],[-1,-1,[]],[[-1,-2],[[15,[-2,-3]]],[],[16,17,18],[]],[-1,[],[]],[-1,-2,[],[]],[[3,[7,[[6,[[5,[1,[4,[2,3]]]]]]]],[7,[8]]],[[11,[4,10]]]],0,0,[[[7,[[6,[[5,[1,[4,[2,3]]]]]]]],1,19,3,9],[[11,[4,10]]]],[10,[[21,[20]]]],[[22,22],[[11,[4,10]]]],[-1,3,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,23,[]],0,0,[[9,22,22,22],[[11,[4,10]]]],[[9,22,22],[[11,[4,10]]]]],"c":[],"p":[[4,"SocketAddr",38],[3,"TcpStream",39],[3,"String",40],[15,"tuple"],[3,"HashMap",41],[3,"Mutex",42],[3,"Arc",43],[3,"AtomicBool",44],[6,"SqlitePool",45],[4,"ServerError",0],[4,"Result",46],[3,"Formatter",47],[6,"Result",47],[3,"Error",48],[3,"IndentedSection",49],[8,"Display",47],[8,"Send",50],[8,"Sync",50],[4,"Message",51],[8,"Error",52],[4,"Option",53],[15,"str"],[3,"TypeId",54],[6,"Clients",0],[6,"ClientMap",0],[13,"ForwardMessageError",34]]},\
"shared":{"doc":"","t":"NNNENNAAFAFMMMMMNNNENNLLLLLLLLLLLLLLLLMMMMMFF","n":["File","Image","Login","Message","Text","Welcome","message","panic","panic_to_text","timestamp","timestamp_to_string","filename","login","motd","pass","payload","File","Image","Login","Message","Text","Welcome","borrow","borrow_mut","deserialize","deserialize","eq","fmt","from","into","receive","receive_with_timeout","send","serialize","serialize","try_from","try_into","type_id","filename","login","motd","pass","payload","panic_to_text","timestamp_to_string"],"q":[[0,"shared"],[11,"shared::Message"],[16,"shared::message"],[38,"shared::message::Message"],[43,"shared::panic"],[44,"shared::timestamp"],[45,"core::any"],[46,"alloc::boxed"],[47,"alloc::string"],[48,"std::time"],[49,"core::result"],[50,"serde::de"],[51,"serde_cbor::error"],[52,"core::fmt"],[53,"core::fmt"],[54,"core::option"],[55,"eyre"],[56,"core::time"],[57,"serde::ser"],[58,"alloc::vec"],[59,"core::any"]],"d":["General file to be transferred (server &lt;-&gt; client).","Content of image file (server &lt;-&gt; client).","Login message (client -&gt; server).","<code>Message</code> is a type representing all messages that might be …","Simple text message (server &lt;-&gt; client).","Welcome message (server -&gt; client).","","","<code>panic_to_text</code> help with conversion of panic error message; …","","<code>timestamp_to_string</code> transforms system time (e.g. from …","","","","","","General file to be transferred (server &lt;-&gt; client).","Content of image file (server &lt;-&gt; client).","Login message (client -&gt; server).","<code>Message</code> is a type representing all messages that might be …","Simple text message (server &lt;-&gt; client).","Welcome message (server -&gt; client).","","","","<code>deserialize</code> is counterpart to the Message::serialize …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","<code>receive</code> try to receive a message from the given TCP <code>stream</code> …","<code>receive_with_timeout</code> try to receive a response blocking …","<code>send</code> the message (<em>self</em>) via the given TCP <code>stream</code>.","","<code>serialize</code> take care of serialization process into CBOR …","","","","","","","","","<code>panic_to_text</code> help with conversion of panic error message; …","<code>timestamp_to_string</code> transforms system time (e.g. from …"],"i":[5,5,5,0,5,5,0,0,0,0,0,22,23,24,23,22,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,22,23,24,23,22,0,0],"f":[0,0,0,0,0,0,0,0,[[[2,[1]]],3],0,[4,3],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[5]]],7],[[[9,[8]]],[[10,[5]]]],[[5,5],11],[[5,12],13],[-1,-1,[]],[-1,-2,[],[]],[14,[[16,[[15,[5]]]]]],[[14,17],[[16,[[15,[5]]]]]],[[5,14],[[16,[18]]]],[[5,-1],6,19],[5,[[10,[[20,[8]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,21,[]],0,0,0,0,0,[[[2,[1]]],3],[4,3]],"c":[],"p":[[8,"Any",45],[3,"Box",46],[3,"String",47],[3,"SystemTime",48],[4,"Message",16],[4,"Result",49],[8,"Deserializer",50],[15,"u8"],[15,"slice"],[6,"Result",51],[15,"bool"],[3,"Formatter",52],[6,"Result",52],[3,"TcpStream",53],[4,"Option",54],[6,"Result",55],[3,"Duration",56],[15,"tuple"],[8,"Serializer",57],[3,"Vec",58],[3,"TypeId",45],[13,"File",38],[13,"Login",38],[13,"Welcome",38]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
